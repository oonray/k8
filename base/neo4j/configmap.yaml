kind: ConfigMap
metadata:
  name: neo4j-conf
apiVersion: v1
data:
  neo4j.conf: |
    server.directories.import=import
    server.bolt.enabled=true
    server.http.enabled=true
    server.https.enabled=false
    server.config.strict_validation.enabled = false

    # Bolt SSL configuration
    #dbms.ssl.policy.bolt.enabled=true
    #dbms.ssl.policy.bolt.base_directory=certificates/bolt
    #dbms.ssl.policy.bolt.private_key=private.key
    #dbms.ssl.policy.bolt.public_certificate=public.crt
    #dbms.ssl.policy.bolt.client_auth=NONE

    # Https SSL configuration
    #dbms.ssl.policy.https.enabled=true
    #dbms.ssl.policy.https.base_directory=certificates/https
    #dbms.ssl.policy.https.private_key=private.key
    #dbms.ssl.policy.https.public_certificate=public.crt
    #dbms.ssl.policy.https.client_auth=NONE

    # Cluster SSL configuration
    #dbms.ssl.policy.cluster.enabled=true
    #dbms.ssl.policy.cluster.base_directory=certificates/cluster
    #dbms.ssl.policy.cluster.private_key=private.key
    #dbms.ssl.policy.cluster.public_certificate=public.crt

    # Backup SSL configuration
    #dbms.ssl.policy.backup.enabled=true
    #dbms.ssl.policy.backup.base_directory=certificates/backup
    #dbms.ssl.policy.backup.private_key=private.key
    #dbms.ssl.policy.backup.public_certificate=public.crt

    #*****************************************************************
    # Logging configuration
    #*****************************************************************

    # To enable HTTP logging, uncomment this line
    #dbms.logs.http.enabled=true

    # To enable GC Logging, uncomment this line
    #server.logs.gc.enabled=true

    # GC Logging Options
    # see https://docs.oracle.com/en/java/javase/11/tools/java.html#GUID-BE93ABDC-999C-4CB5-A88B-1994AAAC74D5
    #server.logs.gc.options=-Xlog:gc*,safepoint,age*=trace

    # Number of GC logs to keep.
    #server.logs.gc.rotation.keep_number=5

    # Size of each GC log that is kept.
    #server.logs.gc.rotation.size=20m

    #*****************************************************************
    # Miscellaneous configuration
    #*****************************************************************

    # Determines if Cypher will allow using file URLs when loading data using
    # `LOAD CSV`. Setting this value to `false` will cause Neo4j to fail `LOAD CSV`
    # clauses that load data from the file system.
    #dbms.security.allow_csv_import_from_file_urls=true


    # Value of the Access-Control-Allow-Origin header sent over any HTTP or HTTPS
    # connector. This defaults to '*', which allows broadest compatibility. Note
    # that any URI provided here limits HTTP/HTTPS access to that URI only.
    #dbms.security.http_access_control_allow_origin=*

    # Value of the HTTP Strict-Transport-Security (HSTS) response header. This header
    # tells browsers that a webpage should only be accessed using HTTPS instead of HTTP.
    # It is attached to every HTTPS response. Setting is not set by default so
    # 'Strict-Transport-Security' header is not sent. Value is expected to contain
    # directives like 'max-age', 'includeSubDomains' and 'preload'.
    #dbms.security.http_strict_transport_security=

    # Retention policy for transaction logs needed to perform recovery and backups.
    #db.tx_log.rotation.retention_policy=2 days

    # Whether or not any database on this instance are read_only by default.
    # If false, individual databases may be marked as read_only using dbms.database.read_only.
    # If true, individual databases may be marked as writable using dbms.databases.writable.
    #dbms.databases.default_to_read_only=false

    # Comma separated list of JAX-RS packages containing JAX-RS resources, one
    # package name for each mountpoint. The listed package names will be loaded
    # under the mountpoints specified. Uncomment this line to mount the
    # org.neo4j.examples.server.unmanaged.HelloWorldResource.java from
    # neo4j-server-examples under /examples/unmanaged, resulting in a final URL of
    # http://localhost:7474/examples/unmanaged/helloworld/{nodeId}
    #server.unmanaged_extension_classes=org.neo4j.examples.server.unmanaged=/examples/unmanaged

    # A comma separated list of procedures and user defined functions that are allowed
    # full access to the database through unsupported/insecure internal APIs.
    #dbms.security.procedures.unrestricted=my.extensions.example,my.procedures.*

    # A comma separated list of procedures to be loaded by default.
    # Leaving this unconfigured will load all procedures found.
    #dbms.security.procedures.allowlist=apoc.coll.*,apoc.load.*,gds.*

    #********************************************************************
    # JVM Parameters
    #********************************************************************

    # G1GC generally strikes a good balance between throughput and tail
    # latency, without too much tuning.
    server.jvm.additional=-XX:+UseG1GC

    # Have common exceptions keep producing stack traces, so they can be
    # debugged regardless of how often logs are rotated.
    server.jvm.additional=-XX:-OmitStackTraceInFastThrow

    # Make sure that `initmemory` is not only allocated, but committed to
    # the process, before starting the database. This reduces memory
    # fragmentation, increasing the effectiveness of transparent huge
    # pages. It also reduces the possibility of seeing performance drop
    # due to heap-growing GC events, where a decrease in available page
    # cache leads to an increase in mean IO response time.
    # Try reducing the heap memory, if this flag degrades performance.
    server.jvm.additional=-XX:+AlwaysPreTouch

    # Trust that non-static final fields are really final.
    # This allows more optimizations and improves overall performance.
    # NOTE: Disable this if you use embedded mode, or have extensions or dependencies that may use reflection or
    # serialization to change the value of final fields!
    server.jvm.additional=-XX:+UnlockExperimentalVMOptions
    server.jvm.additional=-XX:+TrustFinalNonStaticFields

    # Disable explicit garbage collection, which is occasionally invoked by the JDK itself.
    server.jvm.additional=-XX:+DisableExplicitGC

    # Restrict size of cached JDK buffers to 1 KB
    server.jvm.additional=-Djdk.nio.maxCachedBufferSize=1024

    # More efficient buffer allocation in Netty by allowing direct no cleaner buffers.
    server.jvm.additional=-Dio.netty.tryReflectionSetAccessible=true

    # Exits JVM on the first occurrence of an out-of-memory error. Its preferable to restart VM in case of out of memory errors.
    # server.jvm.additional=-XX:+ExitOnOutOfMemoryError

    # Expand Diffie Hellman (DH) key size from default 1024 to 2048 for DH-RSA cipher suites used in server TLS handshakes.
    # This is to protect the server from any potential passive eavesdropping.
    server.jvm.additional=-Djdk.tls.ephemeralDHKeySize=2048

    # This mitigates a DDoS vector.
    server.jvm.additional=-Djdk.tls.rejectClientInitiatedRenegotiation=true

    # Enable remote debugging
    #server.jvm.additional=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005

    # This filter prevents deserialization of arbitrary objects via java object serialization, addressing potential vulnerabilities.
    # By default this filter whitelists all neo4j classes, as well as classes from the hazelcast library and the java standard library.
    # These defaults should only be modified by expert users!
    # For more details (including filter syntax) see: https://openjdk.java.net/jeps/290
    #server.jvm.additional=-Djdk.serialFilter=java.**;org.neo4j.**;com.neo4j.**;com.hazelcast.**;net.sf.ehcache.Element;com.sun.proxy.*;org.openjdk.jmh.**;!*

    # Increase the default flight recorder stack sampling depth from 64 to 256, to avoid truncating frames when profiling.
    server.jvm.additional=-XX:FlightRecorderOptions=stackdepth=256

    # Allow profilers to sample between safepoints. Without this, sampling profilers may produce less accurate results.
    server.jvm.additional=-XX:+UnlockDiagnosticVMOptions
    server.jvm.additional=-XX:+DebugNonSafepoints

    # Open modules for neo4j to allow internal access
    server.jvm.additional=--add-opens=java.base/java.nio=ALL-UNNAMED
    server.jvm.additional=--add-opens=java.base/java.io=ALL-UNNAMED
    server.jvm.additional=--add-opens=java.base/sun.nio.ch=ALL-UNNAMED

    # Disable logging JMX endpoint.
    server.jvm.additional=-Dlog4j2.disable.jmx=true

    # Limit JVM metaspace and code cache to allow garbage collection. Used by cypher for code generation and may grow indefinitely unless constrained.
    # Useful for memory constrained environments
    #server.jvm.additional=-XX:MaxMetaspaceSize=1024m
    #server.jvm.additional=-XX:ReservedCodeCacheSize=512m

    # Allow big methods to be JIT compiled.
    # Useful for big queries and big expressions where cypher code generation can create large methods.
    #server.jvm.additional=-XX:-DontCompileHugeMethods

    #********************************************************************
    # Wrapper Windows NT/2000/XP Service Properties
    #********************************************************************
    # WARNING - Do not modify any of these properties when an application
    #  using this configuration file has been installed as a service.
    #  Please uninstall the service before modifying this section.  The
    #  service can then be reinstalled.

    # Name of the service
    server.windows_service_name=neo4j

    #********************************************************************
    # Other Neo4j system properties
    #********************************************************************

    db.tx_log.rotation.retention_policy=100M size

    server.memory.pagecache.size=512M

    server.default_listen_address=0.0.0.0
    server.directories.logs=/logs
    SERVICE.PORT.7687=7687
    SERVICE.PORT.7474=7474
    SERVICE.PORT=7474
    SERVICE.HOST=0.0.0.0
    PORT.7687.TCP.PROTO=tcp
    PORT.7687.TCP.ADDR=0.0.0.0
    PORT.7687.TCP=tcp://0.0.0.0:7687
    PORT.7474.TCP.PROTO=tcp
    PORT.7474.TCP.ADDR=0.0.0.0
    PORT.7474.TCP=tcp://0.0.0.0:7474
    PORT=tcp://0.0.0.0:7474
